package com.teja.service;

import java.time.LocalDateTime;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.teja.constants.GrievanceConstants;
import com.teja.constants.GrievanceStatus;
import com.teja.entity.GrievanceTypeEntity;
import com.teja.entity.HealthDetails;
import com.teja.model.CustomResponse;
import com.teja.model.GrievanceTypeDetailsModel;
import com.teja.repo.IGrivenanceTypeRepository;
import com.teja.repo.IHealthDetailsTypeRepository;

@Service
@Transactional
public class GrievanceService {

	@Autowired
	private IHealthDetailsTypeRepository healthDetailsTypeRepository;

	@Autowired
	private IGrivenanceTypeRepository grivenanceTypeRepository;

	/* Service Method for Submitting Grievance Based on Type */
	public CustomResponse submitGrievance(GrievanceTypeDetailsModel grievanceTypeDetailsModel) {
		CustomResponse customResponse = new CustomResponse();
		GrievanceTypeEntity grievanceTypeResponse=null;
		try {
			if (grievanceTypeDetailsModel != null) {
				// Check GrievanceTypes
				if (grievanceTypeDetailsModel.getGrievanceType()
						.equalsIgnoreCase(GrievanceConstants.HEALTH.toString())) {
					HealthDetails healthDetails = new HealthDetails();
					BeanUtils.copyProperties(grievanceTypeDetailsModel.getHealthModel(), healthDetails);
					healthDetails.setCreatedDateTimeStamp(LocalDateTime.now());
					healthDetails.setModifiedDateTimeStamp(LocalDateTime.now());
					HealthDetails healthDetails2 = healthDetailsTypeRepository.save(healthDetails);

					// Now creating a record in the griveanveType Details Table
					GrievanceTypeEntity grievanceTypeEntity = new GrievanceTypeEntity();
					grievanceTypeEntity.setGrievanceStatus(GrievanceStatus.OPEN.toString());
					grievanceTypeEntity.setGrievanceType(grievanceTypeDetailsModel.getGrievanceType());
					grievanceTypeEntity.setCreatedDateTimeStamp(LocalDateTime.now());
					grievanceTypeEntity.setModifiedDateTimeStamp(LocalDateTime.now());
					grievanceTypeEntity.setHealthDetails(healthDetails2);
					grievanceTypeResponse=grivenanceTypeRepository.save(grievanceTypeEntity);

				}

				customResponse=new CustomResponse("Grivenace Created Successfully"+grievanceTypeResponse.getGrievanceId(),HttpStatus.CREATED,String.valueOf(HttpStatus.CREATED.value()));
				
				
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return customResponse;
	}

}
